name: üß™ Tests

on:
    push:
        branches:
            - main
            - develop
    pull_request:
        branches:
            - main
            - develop

permissions:
    contents: read

jobs:
    test-dotnet-actions:
        name: Test .NET Actions
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üîß Setup .NET
              uses: ./.github/actions/setup-dotnet
              with:
                  global-json-file: sandbox/ConsoleApp/global.json

            - name: üß™ Test .NET Project
              uses: ./.github/actions/test-dotnet
              with:
                  project: sandbox/ConsoleApp
                  configuration: Debug

            - name: üé® Format .NET Project
              uses: ./.github/actions/format-dotnet
              with:
                  project: sandbox/ConsoleApp

            - name: üèóÔ∏è Build .NET Project
              uses: ./.github/actions/build-dotnet
              with:
                  project: sandbox/ConsoleApp
                  configuration: Release
                  version: 1.0.0-test
                  define-symbols: TEST_BUILD

            - name: üì¶ Pack .NET Project
              uses: ./.github/actions/pack-dotnet
              with:
                  project: sandbox/ConsoleApp
                  configuration: Release
                  version: 1.0.0-test
                  filename: ConsoleApp-test

    test-godot-actions:
        name: Test Godot Actions
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üîß Setup .NET
              uses: ./.github/actions/setup-dotnet
              with:
                  global-json-file: sandbox/GodotApplication/global.json

            - name: üéÆ Setup Godot
              uses: ./.github/actions/setup-godot
              with:
                  global-json-file: sandbox/GodotApplication/global.json
                  target-platforms: Android
                  cache: true

            - name: üß™ Test Godot Project
              uses: ./.github/actions/test-godot
              with:
                  project: sandbox/GodotApplication
                  global-json-file: sandbox/GodotApplication/global.json

    test-unity-actions:
        name: Test Unity Actions
        runs-on: macos-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: ü§ñ Setup Android
              uses: ./.github/actions/setup-android
              with:
                  java-version: 17
                  android-packages: "platform-tools platforms;android-34 build-tools;34.0.0 ndk;25.1.8937393"

            - name: üéÆ Setup Unity
              uses: ./.github/actions/setup-unity
              with:
                  project: sandbox/UnityApplication
                  unity-modules: android
                  cache: true

    test-android-setup:
        name: Test Android Setup
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: ü§ñ Setup Android
              uses: ./.github/actions/setup-android
              with:
                  java-version: 17
                  android-packages: "platform-tools platforms;android-34 build-tools;34.0.0"

    test-xcode-setup:
        name: Test Xcode Setup
        runs-on: macos-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üçé Setup Xcode
              uses: ./.github/actions/setup-xcode
              with:
                  xcode-version: "16.2"

    test-utility-actions:
        name: Test Utility Actions
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: üÜô Bump Version
              id: bump_version
              uses: ./.github/actions/bump-version
              with:
                  version-type: patch

            - name: üìù Generate Changelog
              uses: ./.github/actions/generate-changelog
              with:
                  next-version: ${{ steps.bump_version.outputs.next-version }}

    test-package-actions:
        name: Test Package Actions
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üì¶ Pack Godot Addon
              uses: ./.github/actions/pack-godot-addon
              with:
                  addon: sandbox/GodotApplication/addons/TestAddon
                  version: 1.0.0-test
                  filename: TestAddon-test

    test-format-actions:
        name: Test Format Actions
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üîß Setup .NET
              uses: ./.github/actions/setup-dotnet
              with:
                  global-json-file: sandbox/ConsoleApp/global.json

            - name: üé® Test Format Files Action
              uses: ./.github/actions/format-files
              with:
                  files: "**/*.{yml,yaml,json,md,sh}"
                  ignore-path: ".gitignore"

            - name: üé® Test Format .NET Action
              uses: ./.github/actions/format-dotnet
              with:
                  project: sandbox/ConsoleApp

    test-artifact-actions:
        name: Test Artifact Actions
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üìù Create Test Files
              shell: bash
              run: |
                  mkdir -p test-artifacts/dir1
                  mkdir -p test-artifacts/dir2
                  echo "Test file 1" > test-artifacts/dir1/file1.txt
                  echo "Test file 2" > test-artifacts/dir2/file2.txt
                  echo "Root file" > test-artifacts/root.txt

            - name: üì§ Upload Test Artifact
              uses: ./.github/actions/upload-artifact
              with:
                  name: test-artifact
                  path: test-artifacts/**
                  retention-days: 1

            - name: üßπ Clean Test Files
              shell: bash
              run: rm -rf test-artifacts

            - name: üì• Download Test Artifact (Custom Path)
              uses: ./.github/actions/download-artifact
              with:
                  name: test-artifact
                  path: downloaded-artifacts

            - name: ‚úÖ Verify Downloaded Files (Custom Path)
              shell: bash
              run: |
                  [ -f "downloaded-artifacts/test-artifacts/dir1/file1.txt" ] || {
                    echo "::error::file1.txt not in custom path"
                    exit 1
                  }
                  [ -f "downloaded-artifacts/test-artifacts/dir2/file2.txt" ] || {
                    echo "::error::file2.txt not in custom path"
                    exit 1
                  }
                  [ -f "downloaded-artifacts/test-artifacts/root.txt" ] || {
                    echo "::error::root.txt not in custom path"
                    exit 1
                  }

                  if [ -f "downloaded-artifacts/test-artifact.meta" ]; then
                    echo "::error::Metadata file should be removed"
                    exit 1
                  fi

                  echo "‚úÖ Files verified in custom path, metadata removed"

            - name: üßπ Clean Downloaded Files
              shell: bash
              run: rm -rf downloaded-artifacts

            - name: üì• Download Test Artifact (Restore Paths)
              uses: ./.github/actions/download-artifact
              with:
                  name: test-artifact

            - name: ‚úÖ Verify Restored Files
              shell: bash
              run: |
                  [ -f "test-artifacts/dir1/file1.txt" ] || {
                    echo "::error::file1.txt not restored"
                    exit 1
                  }
                  [ -f "test-artifacts/dir2/file2.txt" ] || {
                    echo "::error::file2.txt not restored"
                    exit 1
                  }
                  [ -f "test-artifacts/root.txt" ] || {
                    echo "::error::root.txt not restored"
                    exit 1
                  }

                  if [ -f "test-artifacts/test-artifact.meta" ]; then
                    echo "::error::Metadata should not be in restored files"
                    exit 1
                  fi

                  if [ -f "test-artifact.meta" ]; then
                    echo "::error::Metadata should not be in workspace"
                    exit 1
                  fi

                  CONTENT1=$(cat test-artifacts/dir1/file1.txt)
                  CONTENT2=$(cat test-artifacts/dir2/file2.txt)
                  CONTENT3=$(cat test-artifacts/root.txt)

                  [ "$CONTENT1" = "Test file 1" ] || {
                    echo "::error::file1.txt wrong content"
                    exit 1
                  }
                  [ "$CONTENT2" = "Test file 2" ] || {
                    echo "::error::file2.txt wrong content"
                    exit 1
                  }
                  [ "$CONTENT3" = "Root file" ] || {
                    echo "::error::root.txt wrong content"
                    exit 1
                  }

                  echo "‚úÖ All files verified in original paths, no metadata"

    test-artifact-file-extensions:
        name: Test Artifact File Extensions
        runs-on: ubuntu-latest
        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v5

            - name: üìù Create Test Files
              shell: bash
              run: |
                  mkdir -p outputs
                  echo "Report content" > outputs/report.txt
                  echo '{"data": "test"}' > outputs/data.json

            - name: üì§ Upload report.txt
              uses: ./.github/actions/upload-artifact
              with:
                  name: report.txt
                  path: outputs/report.txt
                  retention-days: 1

            - name: üì§ Upload data.json
              uses: ./.github/actions/upload-artifact
              with:
                  name: data.json
                  path: outputs/data.json
                  retention-days: 1

            - name: üßπ Clean Original Files
              shell: bash
              run: rm -rf outputs

            - name: üì• Download report.txt
              uses: ./.github/actions/download-artifact
              with:
                  name: report.txt

            - name: üì• Download data.json
              uses: ./.github/actions/download-artifact
              with:
                  name: data.json

            - name: ‚úÖ Verify File Extension Artifacts
              shell: bash
              run: |
                  [ -f "outputs/report.txt" ] || {
                    echo "::error::report.txt not restored"
                    exit 1
                  }
                  [ -f "outputs/data.json" ] || {
                    echo "::error::data.json not restored"
                    exit 1
                  }

                  if [ -f "outputs/report.txt.meta" ] || [ -f "report.txt.meta" ]; then
                    echo "::error::report.txt.meta should be removed"
                    exit 1
                  fi
                  if [ -f "outputs/data.json.meta" ] || [ -f "data.json.meta" ]; then
                    echo "::error::data.json.meta should be removed"
                    exit 1
                  fi

                  REPORT_CONTENT=$(cat outputs/report.txt)
                  DATA_CONTENT=$(cat outputs/data.json)

                  [ "$REPORT_CONTENT" = "Report content" ] || {
                    echo "::error::report.txt wrong content"
                    exit 1
                  }
                  [ "$DATA_CONTENT" = '{"data": "test"}' ] || {
                    echo "::error::data.json wrong content"
                    exit 1
                  }

                  echo "‚úÖ File extension artifacts verified"
