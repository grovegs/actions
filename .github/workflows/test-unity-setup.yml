name: Test Unity Setup Action

on:
  pull_request:
    branches: [main, master, develop]
    paths:
      - ".github/actions/setup-unity/**"
      - ".github/workflows/test-unity-action.yml"
      - "sandbox/UnityApplication/**"
  push:
    branches: [main, master, develop]
    paths:
      - ".github/actions/setup-unity/**"
      - ".github/workflows/test-unity-action.yml"
      - "sandbox/UnityApplication/**"
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run with debug logging"
        required: false
        default: "false"

jobs:
  test-basic-setup:
    name: Test Basic Setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Test Unity Setup (Auto-detect from sandbox)
        uses: ./.github/actions/setup-unity
        with:
          project-path: sandbox/UnityApplication

      - name: Verify Unity Installation
        run: |
          echo "Unity Version: $UNITY_VERSION"
          echo "Unity Path: $UNITY_PATH"
          unity -version || Unity -version

  test-specific-version:
    name: Test Specific Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test Unity Setup with Specific Version
        uses: ./.github/actions/setup-unity
        with:
          unity-version: "6000.1.9f1"

      - name: Verify Version
        run: |
          unity -version | grep "6000.1.9f1"

  test-with-modules:
    name: Test Module Installation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test Unity Setup with Modules
        uses: ./.github/actions/setup-unity
        with:
          unity-version: "6000.1.9f1"
          unity-modules: "android,webgl"

      - name: Check Modules
        run: |
          unity -batchmode -quit -logFile - -buildTarget Android || echo "Android module check"
          unity -batchmode -quit -logFile - -buildTarget WebGL || echo "WebGL module check"

  test-caching:
    name: Test Caching
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: First Install (No Cache)
        uses: ./.github/actions/setup-unity
        with:
          project-path: sandbox/UnityApplication
          cache: "true"

      - name: Second Install (Should Use Cache)
        uses: ./.github/actions/setup-unity
        with:
          project-path: sandbox/UnityApplication
          cache: "true"

  test-no-cache:
    name: Test Without Cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test Unity Setup without Cache
        uses: ./.github/actions/setup-unity
        with:
          unity-version: "6000.1.9f1"
          cache: "false"

  test-error-handling:
    name: Test Error Handling
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Test Invalid Version (Should Fail)
        id: test-invalid
        continue-on-error: true
        uses: ./.github/actions/setup-unity
        with:
          unity-version: "invalid-version"

      - name: Verify Invalid Version Failed
        if: steps.test-invalid.outcome != 'failure'
        run: |
          echo "‚ùå Action should have failed with invalid version format"
          exit 1
