name: üìù Format

on:
    push:
        branches:
            - main
            - develop
    pull_request:
        branches:
            - main
            - develop

permissions:
    contents: read

jobs:
    check-dotnet-format:
        name: Check .NET Code Format
        runs-on: ubuntu-latest

        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v4

            - name: üîß Setup .NET
              uses: ./.github/actions/setup-dotnet
              with:
                  global-json-file: sandbox/ConsoleApp/global.json

            - name: üîç Check .NET Formatting
              uses: ./.github/actions/format-dotnet
              with:
                  project: sandbox/ConsoleApp

    check-shell-format:
        name: Check Shell Script Format
        runs-on: ubuntu-latest

        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v4

            - name: üîß Install shfmt
              run: |
                  curl -L -o shfmt https://github.com/mvdan/sh/releases/latest/download/shfmt_v3.7.0_linux_amd64
                  chmod +x shfmt
                  sudo mv shfmt /usr/local/bin/

            - name: üîß Install shellcheck
              run: |
                  sudo apt-get update
                  sudo apt-get install -y shellcheck

            - name: üîç Check Shell Script Formatting
              run: |
                  # Check if shell scripts are properly formatted
                  echo "Checking shell script formatting..."
                  format_failed=0

                  for script in $(find .github/actions -name "*.sh" -type f); do
                      echo "Checking format of $script"
                      if ! shfmt -i 4 -ci -d "$script"; then
                          echo "‚ùå $script is not properly formatted"
                          format_failed=1
                      fi
                  done

                  if [ $format_failed -eq 1 ]; then
                      echo ""
                      echo "‚ùå Shell script formatting issues found. Please run:"
                      echo "   find .github/actions -name '*.sh' -exec shfmt -w -i 4 -ci {} +"
                      exit 1
                  fi

                  echo "‚úÖ All shell scripts are properly formatted"

            - name: üîç Check Shell Scripts
              run: |
                  # Find all shell scripts and check them with shellcheck
                  echo "Running shellcheck on all shell scripts..."
                  check_failed=0

                  for script in $(find .github/actions -name "*.sh" -type f); do
                      echo "Checking $script"
                      if ! shellcheck "$script"; then
                          check_failed=1
                      fi
                  done

                  if [ $check_failed -eq 1 ]; then
                      echo ""
                      echo "‚ùå Shell script issues found. Please fix the shellcheck warnings above."
                      exit 1
                  fi

                  echo "‚úÖ All shell scripts passed shellcheck"

            - name: ‚úÖ Check Script Permissions
              run: |
                  # Check that all shell scripts are executable
                  echo "Checking shell script permissions..."
                  permission_failed=0

                  for script in $(find .github/actions -name "*.sh" -type f); do
                      if [ ! -x "$script" ]; then
                          echo "‚ùå $script is not executable"
                          permission_failed=1
                      fi
                  done

                  if [ $permission_failed -eq 1 ]; then
                      echo ""
                      echo "‚ùå Shell script permission issues found. Please run:"
                      echo "   find .github/actions -name '*.sh' -exec chmod +x {} +"
                      exit 1
                  fi

                  echo "‚úÖ All shell scripts have correct permissions"

    check-yaml-format:
        name: Check YAML Format
        runs-on: ubuntu-latest

        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v4

            - name: üîç Lint YAML Files
              uses: ibiqlik/action-yamllint@v3
              with:
                  file_or_dir: .github/
                  config_file: .yamllint.yml
                  strict: true

    check-markdown-format:
        name: Check Markdown Format
        runs-on: ubuntu-latest

        steps:
            - name: üìÇ Checkout Code
              uses: actions/checkout@v4

            - name: üîç Lint Markdown Files
              uses: DavidAnson/markdownlint-cli2-action@v16
              with:
                  globs: "**/*.md"
