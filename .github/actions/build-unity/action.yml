name: Build Unity
description: Build Unity project for Android and iOS platforms using Build Profiles.

inputs:
  project:
    description: The relative path to the Unity project folder.
    required: true
  version:
    description: The version number for the build output.
    required: true
  platform:
    description: "The target platform for the build. Supported values: `Android`, `iOS`."
    required: true
  configuration:
    description: The build configuration (e.g., `Release` or `Debug`).
    required: false
    default: "Release"
  filename:
    description: The name of the output file of the build.
    required: true
  profile-name:
    description: "The name of the Unity Build Profile to use. If not specified, defaults to platform name."
    required: false
  unity-email:
    description: "The Unity account email address."
    required: true
  unity-password:
    description: "The Unity account password."
    required: true
  unity-license-key:
    description: "The Unity license serial key."
    required: true
  define-symbols:
    description: A semicolon-separated list of optional symbols to define during the build.
    required: false
  android-keystore:
    description: Base64-encoded content of the Android keystore used for signing APK or AAB files.
    required: false
  android-keystore-user:
    description: The alias name in the Android keystore.
    required: false
  android-keystore-password:
    description: The password for the Android keystore.
    required: false
  android-format:
    description: "The Android build format to use. Supported values: `apk` or `aab`."
    required: false
    default: "apk"
  ios-team-id:
    description: "The Apple Developer Team ID associated with your Apple Developer account."
    required: false
  ios-certificate:
    description: "The Base64-encoded iOS distribution certificate (.p12 file) used for signing the application."
    required: false
  ios-certificate-password:
    description: "The password for the iOS distribution certificate."
    required: false
  ios-provisioning-profile:
    description: "The Base64-encoded iOS provisioning profile (.mobileprovision file) required for building the application."
    required: false
  ios-bundle-identifier:
    description: "The iOS bundle identifier (e.g., com.company.appname)."
    required: false
  build-method:
    description: "Custom build method to use (e.g., MyNamespace.MyClass.MyBuildMethod). If not specified, uses default build."
    required: false

outputs:
  file:
    description: "The path to the exported project file."
    value: ${{ steps.build_project.outputs.file }}

runs:
  using: composite
  steps:
    - name: ‚úÖ Validate Platform Inputs
      shell: bash
      run: |
        case "${{ inputs.platform }}" in
          "Android")
            chmod +x "${{ github.action_path }}/scripts/validate_platform_inputs.sh"
            "${{ github.action_path }}/scripts/validate_platform_inputs.sh" \
            "Android" \
            "android-keystore=${{ inputs.android-keystore }}" \
            "android-keystore-user=${{ inputs.android-keystore-user }}" \
            "android-keystore-password=${{ inputs.android-keystore-password }}"
            ;;
          "iOS")
            chmod +x "${{ github.action_path }}/scripts/validate_platform_inputs.sh"
            "${{ github.action_path }}/scripts/validate_platform_inputs.sh" \
            "iOS" \
            "ios-team-id=${{ inputs.ios-team-id }}" \
            "ios-certificate=${{ inputs.ios-certificate }}" \
            "ios-certificate-password=${{ inputs.ios-certificate-password }}" \
            "ios-provisioning-profile=${{ inputs.ios-provisioning-profile }}" \
            "ios-bundle-identifier=${{ inputs.ios-bundle-identifier }}"
            ;;
          *)
            echo "::error::Unsupported platform: ${{ inputs.platform }}"
            exit 1
            ;;
        esac

    - name: üîë Activate Unity License
      shell: bash
      run: |
        if [ -n "${{ inputs.unity-email }}" ]; then
          echo "::add-mask::${{ inputs.unity-email }}"
        fi
        if [ -n "${{ inputs.unity-password }}" ]; then
          echo "::add-mask::${{ inputs.unity-password }}"
        fi
        if [ -n "${{ inputs.unity-license-key }}" ]; then
          echo "::add-mask::${{ inputs.unity-license-key }}"
        fi
        chmod +x "${{ github.action_path }}/scripts/activate_unity.sh"
        "${{ github.action_path }}/scripts/activate_unity.sh" \
          "${{ inputs.unity-email }}" \
          "${{ inputs.unity-password }}" \
          "${{ inputs.unity-license-key }}"

    - name: üèóÔ∏è Build Project with Build Profiles
      id: build_project
      shell: bash
      run: |
        if [ -n "${{ inputs.unity-email }}" ]; then
          echo "::add-mask::${{ inputs.unity-email }}"
        fi
        if [ -n "${{ inputs.unity-password }}" ]; then
          echo "::add-mask::${{ inputs.unity-password }}"
        fi
        if [ -n "${{ inputs.unity-license-key }}" ]; then
          echo "::add-mask::${{ inputs.unity-license-key }}"
        fi
        if [ -n "${{ inputs.android-keystore-password }}" ]; then
          echo "::add-mask::${{ inputs.android-keystore-password }}"
        fi
        if [ -n "${{ inputs.ios-certificate-password }}" ]; then
          echo "::add-mask::${{ inputs.ios-certificate-password }}"
        fi
        
        case "${{ inputs.platform }}" in
          "Android")
            chmod +x "${{ github.action_path }}/scripts/build_android.sh"
            "${{ github.action_path }}/scripts/build_android.sh" \
            "${{ inputs.project }}" \
            "${{ inputs.version }}" \
            "${{ inputs.configuration }}" \
            "${{ inputs.filename }}" \
            "${{ inputs.unity-email }}" \
            "${{ inputs.unity-password }}" \
            "${{ inputs.unity-license-key }}" \
            "${{ inputs.define-symbols }}" \
            "${{ inputs.android-keystore }}" \
            "${{ inputs.android-keystore-user }}" \
            "${{ inputs.android-keystore-password }}" \
            "${{ inputs.android-format }}" \
            "${{ inputs.build-method }}" \
            "${{ inputs.profile-name }}"
            ;;
          "iOS")
            chmod +x "${{ github.action_path }}/scripts/build_ios.sh"
            "${{ github.action_path }}/scripts/build_ios.sh" \
            "${{ inputs.project }}" \
            "${{ inputs.version }}" \
            "${{ inputs.configuration }}" \
            "${{ inputs.filename }}" \
            "${{ inputs.unity-email }}" \
            "${{ inputs.unity-password }}" \
            "${{ inputs.unity-license-key }}" \
            "${{ inputs.define-symbols }}" \
            "${{ inputs.ios-team-id }}" \
            "${{ inputs.ios-certificate }}" \
            "${{ inputs.ios-certificate-password }}" \
            "${{ inputs.ios-provisioning-profile }}" \
            "${{ inputs.ios-bundle-identifier }}" \
            "${{ inputs.build-method }}" \
            "${{ inputs.profile-name }}"
            ;;
          *)
            echo "::error::Unsupported platform: ${{ inputs.platform }}"
            exit 1
            ;;
        esac