name: Setup .NET
description: Set up a .NET project with SDK version from global.json and optional NuGet package caching.

inputs:
    global-json-file:
        description: Path to the global.json file specifying the .NET SDK version
        required: true
    cache:
        description: Cache .NET SDK installation and NuGet packages
        required: false
        default: "false"

outputs:
    dotnet-version:
        description: The .NET SDK version that was set up
        value: ${{ steps.get-dotnet-version.outputs.dotnet-version }}

runs:
    using: composite
    steps:
        - name: üìñ Get .NET Version
          id: get-dotnet-version
          shell: bash
          env:
              GLOBAL_JSON_FILE: ${{ inputs.global-json-file }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_dotnet_version.sh"
              "${{ github.action_path }}/scripts/get_dotnet_version.sh"

        - name: üõ†Ô∏è Setup .NET SDK
          uses: actions/setup-dotnet@v4
          env:
              DOTNET_CLI_TELEMETRY_OPTOUT: true
              DOTNET_NOLOGO: true
          with:
              dotnet-version: ${{ steps.get-dotnet-version.outputs.dotnet-version }}

        - name: üì¶ Cache NuGet Packages
          if: inputs.cache == 'true'
          uses: actions/cache@v4
          with:
              path: ~/.nuget/packages
              key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj', '**/*.vbproj') }}
              restore-keys: |
                  ${{ runner.os }}-nuget-

        - name: üîé Verify Installation
          shell: bash
          run: |
              echo "::notice::Installed .NET SDK version:"
              dotnet --version
              echo "::notice::Available SDKs:"
              dotnet --list-sdks
