name: Setup .NET
description: Setup a .NET project.

inputs:
    global-json-file:
        description: The path to the global.json file specifying the .NET SDK version.
        required: true
    cache:
        description: Whether to use a cache .NET SDK installation (true/false).
        required: false
        default: "false"

outputs:
    dotnet-version:
        description: The .NET SDK version that was set up.
        value: ${{ steps.get_dotnet_version.outputs.dotnet_version }}

runs:
    using: composite
    steps:
        - name: üìñ Get .Net Version
          id: get_dotnet_version
          shell: bash
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_dotnet_version.sh"
              "${{ github.action_path }}/scripts/get_dotnet_version.sh" "${{ inputs.global-json-file }}"

        - name: üõ†Ô∏è Setup .NET SDK
          uses: actions/setup-dotnet@v4
          env:
              DOTNET_CLI_TELEMETRY_OPTOUT: true
              DOTNET_NOLOGO: true
          with:
              dotnet-version: ${{ steps.get_dotnet_version.outputs.dotnet_version }}

        - name: üì¶ Cache NuGet packages
          if: ${{ inputs.cache == 'true' }}
          uses: actions/cache@v4
          with:
              path: ~/.nuget/packages
              key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj', '**/*.vbproj') }}
              restore-keys: |
                  ${{ runner.os }}-nuget-

        - name: üîé Verify Installation
          shell: bash
          run: |
              echo "::notice::Installed .NET SDK version:"
              dotnet --version
              echo "::notice::Available SDKs:"
              dotnet --list-sdks
