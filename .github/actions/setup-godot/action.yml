name: Setup Godot
description: Download, install, and cache Godot editor and export templates for specified platforms.

inputs:
    global-json-file:
        description: Path to the global.json file to extract the Godot version and stage
        required: true
    target-platforms:
        description: Comma-separated list of target platforms for export templates such as iOS, Android, macOS, Linux, Windows
        required: false
        default: ""
    cache:
        description: Cache Godot editor and export templates
        required: false
        default: "false"

runs:
    using: composite
    steps:
        - name: üìñ Get Godot Info
          id: get-godot-info
          shell: bash
          env:
              GLOBAL_JSON_FILE: ${{ inputs.global-json-file }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_godot_info.sh"
              "${{ github.action_path }}/scripts/get_godot_info.sh"

        - name: üíæ Cache Editor
          id: cache-editor
          if: inputs.cache == 'true'
          uses: actions/cache@v4
          with:
              key: godot-editor-${{ steps.get-godot-info.outputs.version }}-${{ steps.get-godot-info.outputs.stage }}-${{ runner.os }}
              path: ~/.godot

        - name: ‚¨áÔ∏è Download Editor
          if: steps.cache-editor.outputs.cache-hit != 'true' || inputs.cache != 'true'
          shell: bash
          env:
              GODOT_VERSION: ${{ steps.get-godot-info.outputs.version }}
              GODOT_STAGE: ${{ steps.get-godot-info.outputs.stage }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/download_editor.sh"
              "${{ github.action_path }}/scripts/download_editor.sh"

        - name: üìÇ Get Templates Directory
          id: get-templates-dir
          if: inputs.target-platforms != ''
          shell: bash
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_templates_dir.sh"
              "${{ github.action_path }}/scripts/get_templates_dir.sh"

        - name: üíæ Get Templates ID
          id: get-templates-id
          if: inputs.cache == 'true' && inputs.target-platforms != ''
          shell: bash
          env:
              TARGET_PLATFORMS: ${{ inputs.target-platforms }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_templates_id.sh"
              "${{ github.action_path }}/scripts/get_templates_id.sh"

        - name: üíæ Cache Templates
          id: cache-templates
          if: inputs.cache == 'true' && inputs.target-platforms != ''
          uses: actions/cache@v4
          with:
              key: godot-templates-${{ steps.get-templates-id.outputs.templates-id }}-${{ steps.get-godot-info.outputs.version }}-${{ steps.get-godot-info.outputs.stage }}-${{ runner.os }}
              path: ${{ steps.get-templates-dir.outputs.templates-dir }}

        - name: ‚¨áÔ∏è Download Templates
          if: (steps.cache-templates.outputs.cache-hit != 'true' || inputs.cache != 'true') && inputs.target-platforms != ''
          shell: bash
          env:
              GODOT_VERSION: ${{ steps.get-godot-info.outputs.version }}
              GODOT_STAGE: ${{ steps.get-godot-info.outputs.stage }}
              TEMPLATES_DIR: ${{ steps.get-templates-dir.outputs.templates-dir }}
              TARGET_PLATFORMS: ${{ inputs.target-platforms }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/download_templates.sh"
              "${{ github.action_path }}/scripts/download_templates.sh"

        - name: ‚öôÔ∏è Install Editor
          shell: bash
          env:
              GODOT_VERSION: ${{ steps.get-godot-info.outputs.version }}
              GODOT_STAGE: ${{ steps.get-godot-info.outputs.stage }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/install_editor.sh"
              "${{ github.action_path }}/scripts/install_editor.sh"
