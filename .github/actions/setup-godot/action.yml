name: Setup Godot
description: Downloads, installs, and caches Godot for the specified platform.

inputs:
  global-json-file:
    description: Path to the `global.json` file to extract the Godot version.
    required: true
  template-platforms:
    description: Comma-separated list of target platforms for extracting specific Godot export templates (e.g., "iOS, Android, macOS, Linux, Windows").
    required: true
  cached:
    description: Whether to use the cache for Godot.
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: 📖 Get Godot Version
      id: get_version
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/get_version.sh"
        version=$("${{ github.action_path }}/scripts/get_version.sh" "${{ inputs.global-json-file }}")
        echo version="$version" >> "$GITHUB_OUTPUT"

    - name: 💾 Cache Editor
      id: cache_editor
      if: inputs.cached == 'true'
      uses: actions/cache@v4
      with:
        key: godot-editor-${{ steps.get_version.outputs.version }}-${{ runner.os }}
        path: ~/.godot

    - name: ⬇️ Download Editor
      if: steps.cache_editor.outputs.cache-hit != 'true' || inputs.cached != 'true'
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/download_editor.sh"
        "${{ github.action_path }}/scripts/download_editor.sh" "${{ steps.get_version.outputs.version }}" "${{ runner.os }}"

    - name: 📂 Get Templates Directory
      id: get_templates_dir
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/get_templates_dir.sh"
        templates_dir=$("${{ github.action_path }}/scripts/get_templates_dir.sh" "${{ runner.os }}")
        echo templates_dir=${templates_dir} >> "$GITHUB_OUTPUT"

    - name: 💾 Get Templates Id
      id: get_templates_id
      if: inputs.cached == 'true'
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/get_templates_id.sh"
        templates_id=$("${{ github.action_path }}/scripts/get_templates_id.sh" "${{ inputs.template-platforms }}")
        echo templates_id=${templates_id} >> "$GITHUB_OUTPUT"

    - name: 💾 Cache Templates
      id: cache_templates
      if: inputs.cached == 'true'
      uses: actions/cache@v4
      with:
        key: godot-templates-${{ steps.get_templates_id.outputs.templates_id }}-${{ steps.get_version.outputs.version }}-${{ runner.os }}
        path: ${{ steps.get_templates_dir.outputs.templates_dir }}

    - name: ⬇️ Download Templates
      if: steps.cache_templates.outputs.cache-hit != 'true' || inputs.cached != 'true'
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/download_templates.sh"
        "${{ github.action_path }}/scripts/download_templates.sh" "${{ steps.get_version.outputs.version }}" "${{ steps.get_templates_dir.outputs.templates_dir }}" "${{ inputs.template-platforms }}"

    - name: ⚙️ Install Editor
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/install_editor.sh"
        "${{ github.action_path }}/scripts/install_editor.sh" "${{ steps.get_version.outputs.version }}" "${{ runner.os }}"
