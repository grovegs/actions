name: Upload Artifact
description: Upload a build artifact with metadata that will be available for download.

inputs:
    name:
        description: Artifact name
        required: true
    path:
        description: File, directory or wildcard pattern that describes what to upload. Multiple paths can be specified using newline delimiters.
        required: true
    if-no-files-found:
        description: Desired behavior if no files are found. Options are warn, error, or ignore.
        required: false
        default: "warn"
    retention-days:
        description: Duration after which artifact will expire in days. 0 means using default retention. Minimum 1 day, maximum 90 days unless changed from repository settings.
        required: false
        default: "0"
    compression-level:
        description: Level of compression for Zlib to be applied to the artifact archive. Value can range from 0 to 9. For large files that are not easily compressed, a value of 0 is recommended for faster uploads.
        required: false
        default: "6"
    overwrite:
        description: If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists.
        required: false
        default: "false"
    include-hidden-files:
        description: Include hidden files in the artifact
        required: false
        default: "false"

outputs:
    artifact-id:
        description: GitHub ID of an Artifact, can be used by the REST API
        value: ${{ steps.upload.outputs.artifact-id }}
    artifact-url:
        description: URL to download an Artifact. Users must be authenticated to use this URL.
        value: ${{ steps.upload.outputs.artifact-url }}

runs:
    using: composite
    steps:
        - name: ðŸ“¦ Prepare Artifact with Metadata
          id: prepare
          shell: bash
          env:
              ARTIFACT_NAME: ${{ inputs.name }}
              ARTIFACT_PATH: ${{ inputs.path }}
              INCLUDE_HIDDEN: ${{ inputs.include-hidden-files }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/upload_artifact.sh"
              "${{ github.action_path }}/scripts/upload_artifact.sh"

        - name: ðŸ“¤ Upload Artifact
          id: upload
          uses: actions/upload-artifact@v4
          with:
              name: ${{ inputs.name }}
              path: ${{ steps.prepare.outputs.staging-dir }}
              if-no-files-found: ${{ inputs.if-no-files-found }}
              retention-days: ${{ inputs.retention-days }}
              compression-level: ${{ inputs.compression-level }}
              overwrite: ${{ inputs.overwrite }}
              include-hidden-files: true
