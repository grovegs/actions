name: Build Godot
description: Build Godot project for selected platforms.

inputs:
  project:
    description: The relative path to the Godot project folder containing the `project.godot` file.
    required: true
  global-json-file:
    description: The file path to `global.json`, which specifies the Godot version for the build.
    required: true
  version:
    description: The version number for the build output (e.g., `1.0.0`).
    required: true
  platform:
    description: "The target platform for the build. Supported values: `Android`, `iOS`."
    required: true
  preset:
    description: The export preset name defined in the Godot project settings.
    required: true
  configuration:
    description: The build configuration (e.g., `Release` or `Debug`).
    required: true
  filename:
    description: The name of the output file of the build.
    required: true
  define-symbols:
    description: A semicolon-separated list of optional symbols to define during the build.
    required: false
  android-keystore:
    description: Base64-encoded content of the Android keystore used for signing APK or AAB files.
    required: false
  android-keystore-user:
    description: The username associated with the Android keystore.
    required: false
  android-keystore-password:
    description: The password for the Android keystore.
    required: false
  android-format:
    description: "The Android build format to use. Supported values: `apk` (application package) or `aab` (Android app bundle)."
    required: false
  ios-team-id:
    description: "The Apple Developer Team ID associated with your Apple Developer account."
    required: false
  ios-certificate:
    description: "The Base64-encoded iOS distribution certificate (.cer file) used for signing the application."
    required: false
  ios-certificate-password:
    description: "The password used to import the password-protected iOS distribution certificate (.p12) for signing the application."
    required: false
  ios-provisioning-profile:
    description: "The Base64-encoded iOS provisioning profile (.mobileprovision file) required for building the application."
    required: false
  ios-provisioning-profile-uuid:
    description: "The UUID of the iOS provisioning profile to be used during the build process."
    required: false

outputs:
  file:
    description: "The path to the exported project file."
    value: ${{ steps.export_project.outputs.file }}

runs:
  using: composite
  steps:
    - name: ‚úÖ Validate Platform Inputs
      shell: bash
      run: |
        case ${{ inputs.platform }} in
          "Android")
            chmod +x "${{ github.action_path }}/scripts/validate_platform_inputs.sh"
            "${{ github.action_path }}/scripts/validate_platform_inputs.sh" \
            "Android" \
            "android-keystore=${{ inputs.android-keystore }}" \
            "android-keystore-user=${{ inputs.android-keystore-user }}" \
            "android-keystore-password=${{ inputs.android-keystore-password }}" \
            "android-format=${{ inputs.android-format }}"
            ;;
          "iOS")
            chmod +x "${{ github.action_path }}/scripts/validate_platform_inputs.sh"
            "${{ github.action_path }}/scripts/validate_platform_inputs.sh" \
            "iOS" \
            "ios-team-id=${{ inputs.ios-team-id }}" \
            "ios-certificate=${{ inputs.ios-certificate }}" \
            "ios-certificate-password=${{ inputs.ios-certificate-password }}" \
            "ios-provisioning-profile=${{ inputs.ios-provisioning-profile }}" \
            "ios-provisioning-profile-uuid=${{ inputs.ios-provisioning-profile-uuid }}"
            ;;
          *)
            echo "Unsupported platform: ${{ inputs.platform }}"
            exit 1
            ;;
        esac

    - name: üîç Get Godot Version
      id: get_godot_version
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/get_godot_version.sh"
        "${{ github.action_path }}/scripts/get_godot_version.sh" "${{ inputs.global-json-file }}"

    - name: üìÇ Get Templates Directory
      id: get_templates_dir
      if: inputs.platform == 'Android'
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/get_templates_dir.sh"
        "${{ github.action_path }}/scripts/get_templates_dir.sh" "${{ runner.os }}"

    - name: üìÇ Install Android Template
      if: inputs.platform == 'Android'
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/install_android_template.sh"
        "${{ github.action_path }}/scripts/install_android_template.sh" \
        "${{ inputs.project }}" \
        "${{ steps.get_templates_dir.outputs.templates_dir }}" \
        "${{ steps.get_godot_version.outputs.godot_version }}"

    - name: üìÇ Get Export Options
      id: get_export_options
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/get_export_options.sh"
        "${{ github.action_path }}/scripts/get_export_options.sh" \
        "${{ inputs.platform }}" \
        "${{ inputs.version }}" \
        "${{ inputs.ios-team-id }}"

    - name: üìÇ Update Export Presets
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/update_export_presets.sh"
        "${{ github.action_path }}/scripts/update_export_presets.sh" \
        "${{ inputs.project }}/export_presets.cfg" \
        "${{ inputs.preset }}" \
        ${{ steps.get_export_options.outputs.export_options }}

    - name: üìÇ Run Linux Display Server
      if: runner.os == 'Linux'
      shell: bash
      run: |
        chmod +x "${{ github.action_path }}/scripts/run_linux_display_server.sh"
        "${{ github.action_path }}/scripts/run_linux_display_server.sh"

    - name: üìÇ Export Project
      id: export_project
      shell: bash
      run: |
        case ${{ inputs.platform }} in
          "Android")
            chmod +x "${{ github.action_path }}/scripts/export_android_project.sh"
            "${{ github.action_path }}/scripts/export_android_project.sh" \
            "${{ inputs.project }}" \
            "${{ inputs.preset }}" \
            "${{ inputs.configuration }}" \
            "${{ inputs.filename }}" \
            "${{ inputs.define-symbols }}" \
            "${{ inputs.android-keystore }}" \
            "${{ inputs.android-keystore-user }}" \
            "${{ inputs.android-keystore-password }}" \
            "${{ inputs.android-format }}"
            ;;
          "iOS")
            chmod +x "${{ github.action_path }}/scripts/export_ios_project.sh"
            "${{ github.action_path }}/scripts/export_ios_project.sh" \
            "${{ inputs.project }}" \
            "${{ inputs.preset }}" \
            "${{ inputs.configuration }}" \
            "${{ inputs.filename }}" \
            "${{ inputs.define-symbols }}" \
            "${{ inputs.ios-certificate }}" \
            "${{ inputs.ios-certificate-password }}" \
            "${{ inputs.ios-provisioning-profile }}" \
            "${{ inputs.ios-provisioning-profile-uuid }}"
            ;;
          *)
            echo "Error: Unsupported platform Android"
            exit 1
            ;;
        esac
