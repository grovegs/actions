name: Build Godot
description: Build Godot project for selected platforms.

inputs:
    project:
        description: The relative path to the Godot project folder containing the project.godot file.
        required: true
    global-json-file:
        description: The file path to global.json which specifies the Godot version for the build.
        required: true
    version:
        description: The version number for the build output such as 1.0.0.
        required: true
    platform:
        description: The target platform for the build. Supported values are Android and iOS.
        required: true
    preset:
        description: The export preset name defined in the Godot project settings.
        required: true
    configuration:
        description: The build configuration such as Release or Debug.
        required: true
    filename:
        description: The name of the output file of the build.
        required: true
    define-symbols:
        description: A semicolon-separated list of optional symbols to define during the build.
        required: false
    android-keystore:
        description: Base64-encoded content of the Android keystore used for signing APK or AAB files.
        required: false
    android-keystore-user:
        description: The username associated with the Android keystore.
        required: false
    android-keystore-password:
        description: The password for the Android keystore.
        required: false
    android-format:
        description: The Android build format to use. Supported values are apk or aab.
        required: false
    ios-team-id:
        description: The Apple Developer Team ID associated with your Apple Developer account.
        required: false
    ios-certificate:
        description: The Base64-encoded iOS distribution certificate in p12 format used for signing.
        required: false
    ios-certificate-password:
        description: The password for the iOS distribution certificate.
        required: false
    ios-provisioning-profile:
        description: The Base64-encoded iOS provisioning profile in mobileprovision format.
        required: false
    ios-provisioning-profile-uuid:
        description: The UUID of the iOS provisioning profile.
        required: false

outputs:
    file:
        description: The path to the exported project file.
        value: ${{ steps.export-project.outputs.file }}

runs:
    using: composite
    steps:
        - name: üîç Get Godot Info
          id: get-godot-info
          shell: bash
          env:
              GLOBAL_JSON_FILE: ${{ inputs.global-json-file }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_godot_info.sh"
              "${{ github.action_path }}/scripts/get_godot_info.sh"

        - name: üìÇ Get Templates Directory
          id: get-templates-dir
          if: inputs.platform == 'Android'
          shell: bash
          env:
              RUNNER_OS: ${{ runner.os }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_templates_dir.sh"
              "${{ github.action_path }}/scripts/get_templates_dir.sh"

        - name: üì¶ Install Android Template
          if: inputs.platform == 'Android'
          shell: bash
          env:
              PROJECT_DIR: ${{ inputs.project }}
              TEMPLATES_DIR: ${{ steps.get-templates-dir.outputs.templates-dir }}
              GODOT_VERSION: ${{ steps.get-godot-info.outputs.version }}
              GODOT_STAGE: ${{ steps.get-godot-info.outputs.stage }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/install_android_template.sh"
              "${{ github.action_path }}/scripts/install_android_template.sh"

        - name: üîß Get Export Options
          id: get-export-options
          shell: bash
          env:
              PLATFORM: ${{ inputs.platform }}
              VERSION: ${{ inputs.version }}
              IOS_TEAM_ID: ${{ inputs.ios-team-id }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/get_export_options.sh"
              "${{ github.action_path }}/scripts/get_export_options.sh"

        - name: ‚öôÔ∏è Update Export Presets
          shell: bash
          env:
              PRESETS_FILE: ${{ inputs.project }}/export_presets.cfg
              PRESET_NAME: ${{ inputs.preset }}
              EXPORT_OPTIONS: ${{ steps.get-export-options.outputs.export-options }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/update_export_presets.sh"
              "${{ github.action_path }}/scripts/update_export_presets.sh"

        - name: üì§ Export Project
          id: export-project
          shell: bash
          env:
              PLATFORM: ${{ inputs.platform }}
              PROJECT_DIR: ${{ inputs.project }}
              PRESET: ${{ inputs.preset }}
              CONFIGURATION: ${{ inputs.configuration }}
              FILENAME: ${{ inputs.filename }}
              DEFINE_SYMBOLS: ${{ inputs.define-symbols }}
              ANDROID_KEYSTORE: ${{ inputs.android-keystore }}
              ANDROID_KEYSTORE_USER: ${{ inputs.android-keystore-user }}
              ANDROID_KEYSTORE_PASSWORD: ${{ inputs.android-keystore-password }}
              ANDROID_FORMAT: ${{ inputs.android-format }}
              IOS_CERTIFICATE: ${{ inputs.ios-certificate }}
              IOS_CERTIFICATE_PASSWORD: ${{ inputs.ios-certificate-password }}
              IOS_PROVISIONING_PROFILE: ${{ inputs.ios-provisioning-profile }}
              IOS_PROVISIONING_PROFILE_UUID: ${{ inputs.ios-provisioning-profile-uuid }}
          run: |
              chmod +x "${{ github.action_path }}/scripts/export_project.sh"
              "${{ github.action_path }}/scripts/export_project.sh"
